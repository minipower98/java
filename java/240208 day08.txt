클래스와 객체

1. 클래스 객체를 생성하기 위한 설계도 틀
클래스 정의
접근 제한자 클래스  이름 
{
 	멤버변수
	메소드
	생성자
}
2. 객체: new 연산자를 이용하여 객체생성
객체.멤버변수 = 값
객체.메소드 = 매소드 호출 
메소드를 또다른 말로 함수라고 한다.

3. 클래스는 자기 자신은 객체화 할 수 없다. 

<다형성 구현> 
// 메소드 오버로딩: 중복정의
개념: 하나의 클래스에서 똑같은 이름의 메소드를 중복정의 할 수 있다. (메소드 중복정의)
단, 메소드의 입력 매개변수의 개수가 다르거나 타입이 달라야 한다.

// 메소드 오버라이딩: 재정의 

<생성자>
개념: 객체를 생성시 초기화가 목적
특징: 
-클래스의 이름과 동일한 특수한 메소드 형태 (메소드는 아님) 
-반환형태가 없다(리턴 타입 없음)
public Circle1()
{
}
-똑같은 이름의 생성자를 여러개 중복 정의(생성자 오버로딩)
(단, 초기화하는 매개변수 개수나 타입이 달라야 한다)

- 단 하나의 생성자도 정의되어있으면 디폴트 생성자를 호출할 수 없다.
===============================================
this : 자기자신을 가리키는 래퍼런스 변수 지칭 super
== 객체 자신에 래퍼런스
== 표현법 this.멤버변수 

this() : 같은 클래스에서 다른 생성자를 호출할 때 쓴다.
- 같은 생성자에서 다른 생성자를 호출
- 생성자 안에서만 가능 
- 반드시 맨 첫 줄에 생성자 호출 




